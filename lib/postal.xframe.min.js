/**
 * postal.xframe - postal.js/postal.federation plugin for federating instances of postal.js across iframe/window boundaries.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.3.2
 * Url: http://github.com/postaljs/postal.xframe
 * License(s): MIT, GPL
 */
(function(e,t){"function"==typeof define&&define.amd?define(["lodash","postal.federation"],function(n,r){return t(n,r,e)}):"object"==typeof module&&module.exports?module.exports=function(e){return t(require("lodash"),e)}:e.postal=t(e._,e.postal,e)})(this,function(e,t,n,r){function i(){w.routeMessage.apply(w,arguments)}function o(t){for(var n in t)t.hasOwnProperty(n)&&("function"==typeof t[n]&&delete t[n],e.isPlainObject(t[n])&&o(t[n]),e.isArray(t[n])&&e.each(t[n],o));return t}var s=location.origin||location.protocol+"//"+location.host,a=/MSIE [8,9]/.test(navigator.userAgent),u=function(t,n){var r=e.find(this.remotes,function(e){return e.instanceId===n});return r&&t.push(r),t},c=function(t,n){var r=e.find(this.remotes,function(e){return e.target===n});return r&&t.push(r),t},f=function(e){e.disconnect()},d="undefined"==typeof window&&postMessage&&location,g=[],l="xframe",p=function(){},h={allowedOrigins:[s],enabled:!0,defaultOriginUrl:"*",safeSerialize:!1},m=e.extend({},h),v=t.fedx.FederationClient.extend({transportName:"xframe",shouldProcess:function(){var t=!!m.allowedOrigins.length;return m.enabled&&("*"===this.options.origin||t&&e.contains(m.allowedOrigins,this.options.origin)||!t||this.options.isWorker&&e.contains(g,this.target)||d)},send:function(e){var n,i,o=this;this.shouldProcess()&&(n=d?null:this.target,(i=t.fedx.transports[l].wrapForTransport)(e,function(e){var t=o.options.isWorker||d?null:o.options.origin,i=a?null:e.packingSlip.envelope,s=i?i.transferables:r;d?o.target.postMessage.apply(n,[e,t,s]):o.target.postMessage(e,t,s)}))}},{getInstance:function(e,t,n){var r=new v(e,{origin:t,isWorker:"undefined"!=typeof Worker&&e instanceof Worker},n);return r.options.isWorker&&w.listenToWorker(r.target),r}}),w=t.fedx.transports[l]={eagerSerialize:a,XFrameClient:v,configure:function(t){return t&&(m=e.defaults(e.extend(m,t),h)),m},clearConfiguration:function(){m=e.extend({},h)},getTargets:d?function(){return[{target:{postMessage:postMessage}}]}:function(){var t=e.map(document.getElementsByTagName("iframe"),function(e){var t=document.createElement("a");t.href=e.src;var n=t.protocol+"//"+t.host;return"//"===n&&(n=null),{target:e.contentWindow,origin:n||m.defaultOriginUrl}});return window.parent&&window.parent!==window&&t.push({target:window.parent,origin:"*"}),t.concat(g)},remotes:[],wrapForTransport:a?function(e,t){t(JSON.stringify({postal:!0,packingSlip:e}))}:function(e,t){t({postal:!0,packingSlip:e})},unwrapFromTransport:function(e,t){var n;if("string"!=typeof e||!a&&-1===e.indexOf('"postal":true'))n=e;else try{n=JSON.parse(e)}catch(r){n={}}t(n)},routeMessage:function(n){var r=n.source||n.currentTarget,i=this;this.unwrapFromTransport(n.data,function(o){if(o.postal){"worker"===t.instanceId()&&console.log("parsed: "+JSON.stringify(o));var s=e.find(i.remotes,function(e){return e.target===r});s||(s=v.getInstance(r,n.origin,o.packingSlip.instanceId),i.remotes.push(s)),s.onMessage(o.packingSlip)}})},sendMessage:function(t){var n=t;m.safeSerialize&&(n=o(e.cloneDeep(t))),e.each(this.remotes,function(e){e.sendMessage(n)})},disconnect:function(t){t=t||{};var n=t.instanceId?e.reduce(e.isArray(t.instanceId)?t.instanceId:[t.instanceId],u,[],this):t.target?e.reduce(e.isArray(t.target)?t.target:[t.target],c,[],this):this.remotes;t.doNotNotify||e.each(n,f,this),this.remotes=e.without.apply(null,[this.remotes].concat(n))},signalReady:function(t,n){t=e.isArray(t)?t:[t],t=t.length?t:this.getTargets(),n=n||p,e.each(t,function(t){if(t.target){t.origin=t.origin||m.defaultOriginUrl;var r=e.find(this.remotes,function(e){return e.target===t.target});r||(r=v.getInstance(t.target,t.origin),this.remotes.push(r)),r.sendPing(n)}},this)},addEventListener:d?function(){addEventListener("message",i)}:function(e,t,n,r){"undefined"!=typeof window&&("addEventListener"in e?e.addEventListener(t,n,r):e.attachEvent("on"+t,n))},listenToWorker:function(t){e.include(g,t)||(t.addEventListener("message",i),g.push(t))},stopListeningToWorker:function(t){if(t)t.removeEventListener("message",i),g=e.without(g,t);else for(;g.length;)g.pop().removeEventListener("message",i)}};return w.addEventListener(this,"message",i,!1),t});